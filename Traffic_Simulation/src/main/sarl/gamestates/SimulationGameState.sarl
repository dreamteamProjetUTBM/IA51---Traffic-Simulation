/** 
 * 
 */
package gamestates

import org.newdawn.slick.state.BasicGameState
import org.newdawn.slick.GameContainer
import org.newdawn.slick.state.StateBasedGame
import org.newdawn.slick.SlickException
import org.newdawn.slick.Graphics
import environments.*
import org.newdawn.slick.geom.Vector2f
import logic.Map

/** 
 * @author jerem
 * 
 */
class SimulationGameState extends BasicGameState {
	
	var rd = new RoadNetwork
	
	var entities = new EnvironmentObjectCollection
	
	def getID : int {
		return SimulationWindow.GS_SIMULATION
	}
	
	def init(arg0 : GameContainer, arg1 : StateBasedGame) throws SlickException {
		entities = new EnvironmentObjectCollection
		
		//var list = rd.createTestMap
		rd.initMap;
		var list = rd.segments
		for(eo : list){
			entities.add(eo)
		}
		//var car = new Car(new Vector2f(Map.WIDTH / 2, Map.HEIGHT / 2))
		//entities.add(car);
	}
	
	def render(arg0 : GameContainer, arg1 : StateBasedGame, arg2 : Graphics) throws SlickException {
		entities.render(arg2)
	}
	
	def update(arg0 : GameContainer, arg1 : StateBasedGame, arg2 : int) throws SlickException {
		entities.update(arg0, arg1, arg2);
		
	}
	
}
