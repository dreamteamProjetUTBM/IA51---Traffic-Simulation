/** 
 * 
 */
package agents

import io.sarl.core.Destroy
import io.sarl.core.Initialize
import io.sarl.core.Logging
import java.util.UUID
import io.sarl.core.DefaultContextInteractions
import java.util.ArrayList
import io.sarl.core.Lifecycle

/** 
 * Traffic Light controller agent
 * 
 */
agent TrafficLightControllerAgent {
	uses Logging, DefaultContextInteractions, Lifecycle

	/*
	 * Top traffic light
	 */
	var top : UUID;
	
	/*
	 * Bottom traffic light
	 */
	var bottom : UUID;
	
	/*
	 * Left traffic light
	 */
	var left : UUID;
	
	/*
	 * Right traffic light
	 */
	var right : UUID;

	/*
	 * Time used for delay each state
	 */
	var time : double

	on Initialize {
		//info("FlashLightControllerAgent was started.")
		time = 0;
		emit(new AskForLinkedFlashLights(this.ID))
	}

	on Destroy {
		//info("The agent was stopped.")
		killMe
	}

	/**
	 * Send the UUID of 4 different traffic lights
	 */
	on GiveLinkedFlashLights
	{
		top = occurrence.top;
		bottom = occurrence.bottom
		left = occurrence.left;
		right = occurrence.right
	}

	/**
	 * Send when the environment ask for a changement of traffic light state
	 */
	on AskChangementFlashLight
	{
		//Increment the delta time
		time += occurrence.deltaTime;
		var greens = new ArrayList<UUID>
		var oranges = new ArrayList<UUID>
		var reds = new ArrayList<UUID>
		
		//Top & botom => green
		if(time >= 0 && time < 400){
			greens.add(top);
			greens.add(bottom);
		}
		// Top & botom => orange
		if(time >= 400 && time < 600){
			oranges.add(top);
			oranges.add(bottom);
		}
		// Top & botom => red
		if(time > 600){
			reds.add(top);
			reds.add(bottom);
		}
		// Left & right => green
		if (time >= 0 && time < 600) {
			reds.add(left);
			reds.add(right);
		}
		// Left & right => orange
		if (time >= 600 && time < 1000) {
			greens.add(left);
			greens.add(right);
		}
		// Left & right => red
		if (time > 1000) {
			oranges.add(left);
			oranges.add(right);
		}
		
		//Reinitialize the delta time
		if(time >= 1200){
			time = 0;
		}
		
		emit(new ChangeTrafficLight(greens,oranges,reds));
	}
	
	
}

