/** 
 * 
 */
package environments

import framework.math.Point2f
import org.arakhne.afc.gis.mapelement.MapPolygon
import ui.ApplicationMap
import java.util.UUID
import framework.math.Vector2f
import framework.math.Shape2f

/** 
 * @author jerem
 * 
 */
class Car extends Vehicle 
{
	/** Position in the layer */
	var position : Point2f
	
	/** The representation of the car (here a circle) */
	var element : MapPolygon
	
	
	
	new(point : Point2f, maxLinearSpeed : float, maxLinearAcceleration : float, maxAngularSpeed : float,
		maxAngularAcceleration : float)  
	{
		super(point, maxLinearSpeed, maxLinearAcceleration, maxAngularSpeed, maxAngularAcceleration,UUID.randomUUID);
		position = point;
 		perceptionDistance = 0;
	}  
	 
	 

	 
	 
	 def setPerceptionDisatnce(perceptionDistance: float)
	 {
	 	this.perceptionDistance = perceptionDistance
	 }
		
	
	/** 
	 * @author Thomas Gredin
	 * 
	 * @description
	 * Do cleaning stuff, must be called before destroying
	 */
	def cleanUp()
	{
		/** Remove the circle from the map elements layer of the application */
		ApplicationMap.instance.removeAgentBodyInLayer(element);
	}

	override moveVehicle(newPos: Point2f)
	{
		position = newPos;		
	}
	
	def getPosition(): Point2f
	{
		return position;
	}
	
	def getElement(): MapPolygon
	{
		return element;
	}
}
