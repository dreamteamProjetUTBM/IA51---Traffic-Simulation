/** 
 * 
 */
package environments

import org.newdawn.slick.Graphics
import org.newdawn.slick.GameContainer
import org.newdawn.slick.state.StateBasedGame
import org.newdawn.slick.geom.Rectangle
import org.newdawn.slick.geom.Vector2f
import org.newdawn.slick.Color
import org.newdawn.slick.geom.Polygon
import java.util.UUID

/** 
 * @author jerem
 * 
 */
class Car extends Vehicle{
	
	var polygon : Polygon;
	var position : Vector2f
	
	
	new(vector : Vector2f, id : UUID){
		super(vector,id)
		position = vector
		
		polygon = new Polygon
		polygon.addPoint(position.x - 1f, position.y - 5f)
		polygon.addPoint(position.x - 1f, position.y + 5f)
		polygon.addPoint(position.x + 1f, position.y - 5f)
		polygon.addPoint(position.x + 1f, position.y + 5f)
		polygon.closed = true
		
	}

	override moveVehicle(newPos : Vector2f)
	{
		position = newPos
		
		polygon = new Polygon
		polygon.addPoint(position.x - 1f, position.y - 5f)
		polygon.addPoint(position.x - 1f, position.y + 5f)
		polygon.addPoint(position.x + 1f, position.y - 5f)
		polygon.addPoint(position.x + 1f, position.y + 5f)
		polygon.closed = true
		
		super.move(newPos)
		
	}
	
	def getPosition():Vector2f{
		return position
	}
	
	def render(arg2 : Graphics) {
		arg2.color = Color.red
		arg2.draw(polygon)
	}
	
	def update(gc : GameContainer, sbg : StateBasedGame, delta : int) {
		
	}
	
	
}
