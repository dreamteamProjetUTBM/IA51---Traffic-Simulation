/** 
 * 
 */
package environments

import java.util.UUID
import framework.math.Rectangle2f
import framework.math.Point2f
import org.arakhne.afc.gis.mapelement.MapElement
import org.arakhne.afc.gis.mapelement.MapPoint
import org.arakhne.afc.gis.mapelement.MapCircle
import ui.Application
import org.arakhne.afc.gis.mapelement.MapPolygon

/** 
 * @author jerem
 * 
 */
class Car extends Vehicle
{
	
	/** Position in the layer */
	var position : Point2f
	
	/** The representation of the car (here a circle) */
	var element : MapPolygon
	
	new(point : Point2f, maxLinearSpeed : float, maxLinearAcceleration : float, maxAngularSpeed : float,
		maxAngularAcceleration : float) 
	{
		super(point, maxLinearSpeed, maxLinearAcceleration, maxAngularSpeed, maxAngularAcceleration);
		position = point;

		/** Create and add the element to the layer */
		element = new MapPolygon();
		element.addPoint(position.x - 10, position.y + 20)
		element.addPoint(position.x - 10, position.y - 20)
		element.addPoint(position.x + 10, position.y - 20)
		element.addPoint(position.x + 10, position.y + 20)
		
		Application.instance.addAgentBodyInLayer(element);
	}
	
	/**
	 * @author Thomas Gredin
	 * 
	 * @description
	 * Do cleaning stuff, must be called before destroying
	 */
	def cleanUp()
	{
		/** Remove the circle from the map elements layer of the application */
		Application.instance.removeAgentBodyInLayer(element);
	}

	override moveVehicle(newPos : Point2f)
	{
		position = newPos;		
	}
	
	def getPosition():Point2f
	{
		return position
	}
	
	def getElement:MapPolygon
	{
		return element
	}
}
