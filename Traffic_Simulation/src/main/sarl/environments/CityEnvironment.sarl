/** 
 * 
 */
package environments

import framework.environment.AbstractEnvironment
import framework.environment.AgentBody
import java.util.List
import framework.environment.Influence
import framework.environment.Percept
import java.util.Collection
import framework.environment.MotionInfluence
import framework.time.TimeManager
import framework.environment.SituatedObject
import java.util.ArrayList
import org.arakhne.afc.gis.road.primitive.RoadNetwork
import org.arakhne.afc.gis.road.layer.RoadNetworkLayer
import logic.Map
import framework.time.StepTimeManager
import framework.math.Point2f
import framework.math.Shape2f
import org.arakhne.afc.math.geometry.d2.Shape2D
import org.arakhne.afc.math.geometry.d2.d.Shape2d
import framework.environment.Body

/** 
 * @author jerem
 * 
 */
class CityEnvironment extends AbstractEnvironment{
	
	var environmentObjects : ArrayList<EnvironmentObject>

	/** Contains all data to draw Road Segments using JavaFX */
	var roadNetwork : RoadNetwork;
	var network : RoadNetworkLayer; // MapElementLayer<?>
	
	/** Contains all data about road segments */
	var roadSegmentDataCollection : RoadSegmentDataCollection;
	
	new(){
		super(Map.WIDTH, Map.HEIGHT, new StepTimeManager(500))
		roadSegmentDataCollection = new RoadSegmentDataCollection()
		environmentObjects = new ArrayList<EnvironmentObject>
	}
	
	def getNetwork() : RoadNetworkLayer{
		return network
	}

	def setNetwork(network : RoadNetworkLayer){
		this.network=network
	}
	
	def getRoadSegmentDataCollection() : RoadSegmentDataCollection{
		return roadSegmentDataCollection
	}
	
	def setRoadSegmentDataCollection(roadSegmentDataCollection : RoadSegmentDataCollection){
		this.roadSegmentDataCollection = roadSegmentDataCollection
	}
	
	def getEnvironmentObjects() : ArrayList<EnvironmentObject>{
		return environmentObjects
	}
	
	def addEnvironmentObject(object : EnvironmentObject) {
		environmentObjects.add(object)
	}
	
	def getRoadNetwork() : RoadNetwork{
		return roadNetwork
	}
	
	def createAgentBody() {
		var car = new Car(new Point2f(
			network.getMapElementAt(0).geoLocation.toBounds2D.maxX,
			network.getMapElementAt(0).geoLocation.toBounds2D.maxY
		), 0, 0, 0, 0)
		addAgentBody(car,car.position,car.angle)
	}
	
	protected def onAgentBodyCreated(body : AgentBody) {
		
		//throw new UnsupportedOperationException("TODO: auto-generated method stub")
	}
	
	protected def onAgentBodyDestroyed(body : AgentBody) {
		throw new UnsupportedOperationException("TODO: auto-generated method stub")
	}
	
	protected def computeEndogenousBehaviorInfluences : List<Influence> {
		throw new UnsupportedOperationException("TODO: auto-generated method stub")
	}
	
	protected def computePerceptionsFor(^agent : AgentBody) : List<Percept> {
		var u = new ArrayList<Percept>
		for(o : environmentObjects){
			if((o as TrafficLight).element.intersects(((^agent as Vehicle).rectangle) as Shape2d<?>)){
				u.add(new Percept(o as ObjectBody)); 
			}
							  
		} 
		return u;
	}
	
	protected def applyInfluences(motionInfluences : Collection<MotionInfluence>, otherInfluences : Collection<Influence>, timeManager : TimeManager) {
		throw new UnsupportedOperationException("TODO: auto-generated method stub")
	}
	
	def getAllObjects : Iterable<? extends SituatedObject> {
		throw new UnsupportedOperationException("TODO: auto-generated method stub")
	}
	
}
