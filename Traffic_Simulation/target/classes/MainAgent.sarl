/** 
 * 
 */

import environments.RoadNetwork
import framework.FrameworkLauncher
import io.sarl.core.Initialize
import io.sarl.core.Lifecycle
import io.sarl.core.Logging
import java.util.List
import org.arakhne.afc.gis.maplayer.MapElementLayer
import ui.Application
import agents.CarGPSAgent
import agents.CarMapAgent
import environments.Environment

/**
 * @description
 * Agent MainAgent.
 * 
 * This agent is used to setup and launch the application.
 */
agent MainAgent extends FrameworkLauncher 
{	
	uses Lifecycle
	uses Logging
	
	//pour tester
	var rd = new RoadNetwork


	/*
	 * Size of the screen
	 */
	val WORLD_SIZE_X = 1280f
	val WORLD_SIZE_Y = 640f
	
	/*
	 * Application JavaFX
	 */
	var application : Application
	
	on Initialize 
	{
		// Nothing to do here	
	}
	
	override initializeSimulation(parameters : List<Object>) : boolean 
	{
		val grand = "asset/Belfort.shp";
		val ville = "asset/Ville.shp";


		var environment = new Environment(WORLD_SIZE_X, WORLD_SIZE_Y,)

		var params = newArrayList
		params += parameters
		// Launch application
		application = new Application
		//application.launch(Application, ville)

		Application.launch(Application, ville);
		
		return initializeSimulation(environment, type, application, params) [
		var agentType = it.type
				if ("LEADER" == agentType) {
					return typeof(CarGPSAgent)
				}
				if ("FOLLOWER" == agentType) {
					return typeof(CarMapAgent)
				}
				throw new IllegalArgumentException		
		]
		return true;
	}
	
}
