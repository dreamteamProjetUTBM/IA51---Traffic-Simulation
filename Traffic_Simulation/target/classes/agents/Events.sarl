/** 
 * 
 */
package agents

import java.util.ArrayList
import org.arakhne.afc.gis.road.primitive.RoadSegment
import java.util.UUID

/** 
 * @author Marine
 * 
 */
 
 /**
  * Request the A* path
  */
event requestAStar
{
	val ID : UUID;
	
	new(id : UUID)
	{
		this.ID = id;
	}
	
}

/**
 * Send the A* path
 */
event pathAStar 
{
	val pathReturn : ArrayList<RoadSegment>;
	
	new(p : ArrayList<RoadSegment>)
	{
		this.pathReturn = p;
	}
}

/*
 * Inform the environment that the agent has reached his final point
 */
event DestinationReached
{
	val ID : UUID
	
	new(id: UUID){
		this.ID = id;
	}
}

/*
 * Ask the environment for traffic lights in a crossroads
 */
event AskForLinkedFlashLights
{
	/*
	 * UUID of the traffic light controler sender 
	 */
	val ID : UUID

	new(id : UUID) {
		this.ID = id;
	}
}

/*
 * Send the UUID of 4 different traffic lights
 */
event GiveLinkedFlashLights
{
	var top : UUID;
	var bottom : UUID;
	var left : UUID;
	var right : UUID;
	
	new(top : UUID, bottom : UUID, left : UUID, right : UUID) {
		this.top = top;
		this.bottom = bottom;
		this.left= left;
		this.right = right
	}
}

/*
 * Send when the environment ask for a changement of traffic light state
 */
event AskChangementFlashLight
{
	var deltaTime : double
	
	new (deltaTime : double){
		this.deltaTime = deltaTime;
	}
}

/*
 * Send new traffic lights states
 */
event ChangeTrafficLight
{
	var greens : ArrayList<UUID>
	var oranges : ArrayList<UUID>
	var reds : ArrayList<UUID>
	
	new(greens : ArrayList<UUID>, oranges : ArrayList<UUID>, reds : ArrayList<UUID>){
		this.greens = greens;
		this.oranges = oranges;
		this.reds = reds;
	}
}