/** 
 * 
 */
package agents

import io.sarl.core.AgentKilled
import io.sarl.core.AgentSpawned
import io.sarl.core.ContextJoined
import io.sarl.core.ContextLeft
import io.sarl.core.Destroy
import io.sarl.core.Initialize
import io.sarl.core.Logging
import io.sarl.core.MemberJoined
import io.sarl.core.MemberLeft
import java.util.UUID
import io.sarl.core.DefaultContextInteractions
import java.util.ArrayList

/** 
 * @author jerem
 * 
 */
agent TrafficLightControllerAgent {
	uses Logging, DefaultContextInteractions

	var top : UUID;
	var bottom : UUID;
	var left : UUID;
	var right : UUID;

	var time : double

	on Initialize {
		// Event trigger before the agent begin to live or to be used.
		// You should put all the initialization statements in this block of code.
		info("FlashLightControllerAgent was started.")
		time = 0
		emit(new AskForLinkedFlashLights(this.ID))
	}

	on Destroy {
		// Event trigger when the agent is destroyed from the system.
		// You should put all the resource releasing statements in this block of code.
		info("The agent was stopped.")
	}

	on GiveLinkedFlashLights
	{
		top = occurrence.top;
		bottom = occurrence.bottom
		left = occurrence.left;
		right = occurrence.right
	}
	
	on AskChangementFlashLight
	{
		
		time += occurrence.deltaTime;
		var greens = new ArrayList<UUID>
		var oranges = new ArrayList<UUID>
		var reds = new ArrayList<UUID>
		
		if(time >= 0 && time < 400){
			greens.add(top);
			greens.add(bottom);
		}
		if(time >= 400 && time < 600){
			oranges.add(top);
			oranges.add(bottom);
		}
		if(time > 600){
			reds.add(top);
			reds.add(bottom);
		}

		if (time >= 0 && time < 600) {
			reds.add(left);
			reds.add(right);
		}
		if (time >= 600 && time < 1000) {
			greens.add(left);
			greens.add(right);
		}
		if (time > 1000) {
			oranges.add(left);
			oranges.add(right);
		}
		
		if(time >= 1200){
			time = 0;
		}
		
		emit(new ChangeTrafficLight(greens,oranges,reds));
	}
	
	
}

