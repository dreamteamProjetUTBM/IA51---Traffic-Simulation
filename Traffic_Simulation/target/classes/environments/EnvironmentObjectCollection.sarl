/** 
 * 
 */
package environments

import java.util.ArrayList
import logic.Map

/** 
 * @author jerem
 * 
 */
class EnvironmentObjectCollection  {
	var entities : ArrayList<EnvironmentObject>

	new() {
		entities = new ArrayList<EnvironmentObject>();
	}
 
	def getEntities() : ArrayList<EnvironmentObject> {
		return entities;
	}

	def add(_entity : EnvironmentObject) {
		entities.add(_entity);
	}

	def addAt(_entity : EnvironmentObject, index : int) {
		entities.add(index, _entity);
	}

	def delete(_entity : EnvironmentObject) : boolean {
		return entities.remove(_entity);
	}

/**
	 * Permet de supprimer avec une �galit� profonde, contrairement a delete
 * (qui utilise la methode equals pour comparer les objets)
 * 
 * @param _entity
 * @return
 */
	def deleteObject(_entity : EnvironmentObject) : boolean {
		for (var i = 0; i < entities.size(); i++) {
			if (entities.get(i) == _entity) {
				entities.remove(i);
				return true;
			}
		}
		return false;
	}
	
}
