/** 
 * 
 */
package environments

import java.util.ArrayList
import java.util.UUID
import framework.math.Point2f
import javafx.scene.shape.Rectangle

/** 
 * @author jerem
 * 
 */
abstract class EnvironmentObject {

	var updatable : boolean
	var drawable : boolean
	
	var position : Point2f
	var size : Point2f
	
	var points = new ArrayList<Point>

	new (_position : Point2f, _size : Point2f, isUpdatable : boolean, isDrawable : boolean) {
		position = new Point2f(_position.x, _position.y)
		size = new Point2f(_size.x, _size.y)

		updatable = isUpdatable
		drawable = isDrawable
	}

	new (_position : Point2f, isUpdatable : boolean, isDrawable : boolean) {
		position = new Point2f(_position.x, _position.y)
		size = new Point2f

		updatable = isUpdatable
		drawable = isDrawable
	}
	
	new() {
		position = new Point2f()
		size = new Point2f

		updatable = false
		drawable = false
	}
	

	def getPosition() : Point2f {
		return position;
	}

	def setPosition(_position : Point2f) {
		position.x = _position.x;
		position.y = _position.y;
	}

	def move(_offset : Point2f) {
		position.x = position.x + _offset.x;
		position.y = position.y + _offset.y;
	}

	def getSize() : Point2f {
		return size;
	}

	def setSize(_size : Point2f) {
		size.x = _size.x;
		size.y = _size.y;
	}

	def getRect() : Rectangle {
		var rect = new Rectangle(position.x, position.y, size.x, size.y);
		return rect;
	}

	def isUpdateble() : boolean {
		return updatable;
	}

	def isDrawable() : boolean {
		return drawable;
	}
}
