/** 
 * 
 */
package gamestates

import org.newdawn.slick.state.BasicGameState
import environments.Button
import environments.EventEntityMouseClicked
import org.newdawn.slick.Image
import org.newdawn.slick.GameContainer
import org.newdawn.slick.state.StateBasedGame
import org.newdawn.slick.SlickException
import org.newdawn.slick.Color
import org.newdawn.slick.geom.Vector2f
import logic.Map

/** 
 * @author jerem
 * 
 */
class MainMenuGameState extends BasicGameState {

	var play_button : Button;
	var option_button : Button;
	var quit_button : Button;

	var logo : Image;

	def override init(arg0 : GameContainer, arg1 : StateBasedGame) throws SlickException {
		arg0.getGraphics().setBackground(Color.white);
	
		
		play_button = new Button(new Vector2f((Map.WIDTH / 2) - (600 / 2), 375), "asset/b_play_idle.png",
				"asset/b_play_hover.png", "asset/b_play_pressed.png");
		play_button.setEventCallback(new EventEntityMouseClicked() {
			def override mouseClicked() {
				try {
					arg1.getState(SimulationWindow.GS_SIMULATION).init(arg0, arg1);
					arg1.enterState(SimulationWindow.GS_SIMULATION);
				} catch (e : SlickException) {
					e.printStackTrace();
				}
			}
});
		
		
	}

	def ovrride render(GameContainer arg0, StateBasedGame arg1, Graphics arg2) throws SlickException
	{
		play_button.render(arg2);
	}

@Override

public void update(GameContainer arg0, StateBasedGame arg1, int arg2) throws SlickException {
		play_button.update(arg0, arg1, arg2);
	}
	
}
